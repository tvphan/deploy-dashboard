# Dockerfile for slave

FROM cloudant/base-local-precise:{{docker.tag}}

MAINTAINER Cloudant, An IBM Company <support@cloudant.com>
ENV DEBIAN_FRONTEND noninteractive

# Disable root password
RUN passwd -l root

# Add user jenkins to the image
RUN adduser --quiet jenkins

# Set password for the jenkins user (you may want to alter this).
RUN echo "jenkins:jenkins" | chpasswd
RUN chown -R jenkins:jenkins /home/jenkins

# Add the aptly & cloudant local public repository to the list
RUN echo "deb http://repo.aptly.info/ squeeze main" >> /etc/apt/sources.list
RUN echo "deb [arch=amd64] http://s3.amazonaws.com/cloudant-local-extdeps/releases/ubuntu/latest precise main" >> /etc/apt/sources.list

# Install aptly
RUN gpg --keyserver keys.gnupg.net --recv-keys 2A194991
RUN gpg -a --export 2A194991 | sudo apt-key add -
RUN apt-get update
RUN apt-get -y --force-yes install aptly
ADD shared/aptly.conf /home/jenkins/.aptly.conf
RUN chown jenkins:jenkins /home/jenkins/.aptly.conf

# Setup AWS s3cmd tool
ADD shared/s3cfg /home/jenkins/.s3cfg
RUN chown -R jenkins:jenkins /home/jenkins/.s3cfg

RUN gpg --keyserver keys.gnupg.net --recv-keys 15BE8E26
RUN gpg -a --export 15BE8E26 | apt-key add -

USER jenkins

# Create the aptly repos
RUN aptly repo create \
    -config="/home/jenkins/.aptly.conf" \
    -comment="Cloudant Local Services" \
    -distribution="precise" \
    cloudant-local-services

RUN aptly repo create \
    -config="/home/jenkins/.aptly.conf" \
    -comment="Cloudant Local External Dependencies" \
    -distribution="precise" \
    cloudant-local-extdeps

RUN aptly publish repo -distribution=precise -architectures="amd64" -config="/home/jenkins/.aptly.conf" cloudant-local-extdeps cloudant-local-extdeps/ubuntu
RUN aptly publish repo -distribution=precise -architectures="amd64" -config="/home/jenkins/.aptly.conf" cloudant-local-services cloudant-local-services/ubuntu

USER root

# Configure git
ADD shared/gitconfig /home/jenkins/.gitconfig
RUN chown jenkins:jenkins /home/jenkins/.gitconfig

# Configure maven
RUN mkdir -p /home/jenkins/.m2
ADD shared/settings.xml /home/jenkins/.m2/settings.xml
RUN chown -R jenkins:jenkins /home/jenkins/.m2

# Configure ssh
RUN mkdir -p /home/jenkins/.ssh
ADD shared/id_rsa /home/jenkins/.ssh/id_rsa
ADD shared/ssh_config /home/jenkins/.ssh/config
RUN chown -R jenkins:jenkins /home/jenkins/.ssh \
	&& chmod -R og-rwx /home/jenkins/.ssh

# Grant the jenkins user sudo privileges
RUN echo "jenkins ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
CMD ["/usr/sbin/sshd", "-D"]
