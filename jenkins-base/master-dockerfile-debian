# Dockerfile for the jenkins '{{os_codename}}' slave

FROM cloudant/base-{{os_codename}}:{{docker.tag}}
MAINTAINER Cloudant, An IBM Company <support@cloudant.com>
ENV DEBIAN_FRONTEND noninteractive

# Disable root password
RUN passwd -l root

# Add user jenkins to the image
RUN adduser --quiet jenkins

# Set password for the jenkins user (you may want to alter this).
RUN echo "jenkins:jenkins" | chpasswd

# Grant the user sudo privileges
RUN echo "jenkins ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# Ensure that jenkins' HOME variable is not kept while sudo.
# This avoids conflitcs using sudo in Debian and Ubuntu.
RUN echo "Defaults:jenkins env_keep-=HOME" >> /etc/sudoers

USER jenkins
WORKDIR /home/jenkins

# Configure git
ADD shared/gitconfig /home/jenkins/.gitconfig
RUN sudo chown jenkins:jenkins /home/jenkins/.gitconfig

# Install and configure ssh
RUN sudo apt-get -qq update
RUN sudo apt-get install -qq -y --force-yes openssh-server
RUN mkdir -p /home/jenkins/.ssh
ADD shared/id_rsa /home/jenkins/.ssh/id_rsa
ADD shared/ssh_config /home/jenkins/.ssh/config
RUN sudo chown -R jenkins:jenkins /home/jenkins/.ssh \
	&& sudo chmod -R og-rwx /home/jenkins/.ssh

# Setup AWS s3cmd tool
ADD shared/s3cfg /home/jenkins/.s3cfg
RUN sudo chown -R jenkins:jenkins /home/jenkins/.s3cfg

USER root

# Create /builds
RUN mkdir /builds
RUN chown jenkins:jenkins -R /builds

# Configure public apt repository
RUN echo "deb [arch=amd64] http://s3.amazonaws.com/cloudant-public-apt-repo-{{os_brand}} {{os_codename}} main" >> /etc/apt/sources.list
RUN wget -qO - http://s3.amazonaws.com/cloudant-public-apt-repo-{{os_brand}}/cloudant-apt-pub.key | apt-key add -
RUN apt-get update

# Do NOT intall apt-transport-s3. Just configure private repository.
# Leave in /tmp for being used by other jobs.
ADD shared/cloudant-private-apt-repo-source.list /tmp/cloudant-private-apt-repo-source.list
RUN chmod 644 /tmp/cloudant-private-apt-repo-source.list

# Install java (needed for Jenkins slave)
RUN apt-get install -qq -y --force-yes default-jre
{{jre17_install}}

{% if os_codename == 'jessie' %}
RUN echo "deb http://http.debian.net/debian jessie-backports main" >> /etc/apt/sources.list
RUN sudo apt-get update
RUN sudo apt-get install -qq -y --force-yes openjdk-8-jre-headless
RUN sudo apt-get install -qq -y --force-yes openjdk-8-jdk
{% endif %}

# SSH login fix. Otherwise user is kicked off after login
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd
RUN mkdir /var/run/sshd
EXPOSE 22
CMD ["/usr/sbin/sshd", "-D"]
