#!/usr/bin/env python
"""
docker-purge - Removes all the images tags other than the latest tag or release tags ('latest' or 'x.x.x')
"""

import optparse as op
import subprocess

USAGE = "%prog [OPTIONS] REPO_NAME"

def purge_tags(repo_name, image_list):
    for line in image_list:
        tag = line.split()[1]
        if (tag != "latest"):
            subprocess.call(['docker','rmi',repo_name+":"+tag],stdout=subprocess.PIPE)

def get_image_list(repo_name):
    proc = subprocess.Popen(['docker','images'],stdout=subprocess.PIPE)
    image_list=[]
    while True:
        line = proc.stdout.readline().rstrip()
        if line != '':
            fields = line.split()
            if ((fields[0] == repo_name)):
                image_list.append(line)
        else:
            break
    return image_list

def options():
    return [
        op.make_option("-v", dest="verbose", default=False,
            help="Enable verbose output.")
    ]

def main():
    parser = op.OptionParser(usage=USAGE, option_list=options())
    opts, args = parser.parse_args()
    if len(args) == 0:
		parser.error("Repository Name required")
    elif len(args) > 1:
        parser.error("Unknown arguments: " + ", ".join(args[1:]))
    else:
        repo_name = args[0]

    image_list = get_image_list(repo_name)
    purge_tags(repo_name, image_list)

if __name__ == "__main__":
    main()
